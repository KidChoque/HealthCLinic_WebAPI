// <auto-generated />
using System;
using HealthClinic_WebAPI_Lucas.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthClinic_WebAPI_Lucas.Migrations
{
    [DbContext(typeof(HealthClinicContext))]
    [Migration("20231004133530_BD")]
    partial class BD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Clinica", b =>
                {
                    b.Property<Guid>("IdClinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<TimeSpan>("HoraAbertura")
                        .HasColumnType("TIME");

                    b.Property<TimeSpan>("HoraFechamento")
                        .HasColumnType("TIME");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(9)");

                    b.HasKey("IdClinica");

                    b.ToTable("Clinica");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Comentario", b =>
                {
                    b.Property<Guid>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Exibe")
                        .HasColumnType("BIT");

                    b.Property<Guid>("IdConsulta")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Consultas", b =>
                {
                    b.Property<Guid>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("DATE");

                    b.Property<TimeSpan>("HorarioAgendamento")
                        .HasColumnType("TIME");

                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProntuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSituacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdConsulta");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdProntuario")
                        .IsUnique();

                    b.HasIndex("IdSituacao");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Especialidades", b =>
                {
                    b.Property<Guid>("IdEspecialidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloEspecialidades")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdEspecialidades");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Medico", b =>
                {
                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR(12)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<Guid>("IdClinica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMedico")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdMedico");

                    b.HasIndex("IdClinica");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.MedicoEspecialidade", b =>
                {
                    b.Property<Guid>("IdMedicoEspecialidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEspecialidades")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdMedicoEspecialidade");

                    b.HasIndex("IdEspecialidades");

                    b.HasIndex("IdMedico");

                    b.ToTable("MedicoEspecialidade");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Paciente", b =>
                {
                    b.Property<Guid>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomePaciente")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR(7)");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Prontuario", b =>
                {
                    b.Property<Guid>("IdProntuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescricaoExame");

                    b.HasKey("IdProntuario");

                    b.ToTable("Prontuario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Situacao", b =>
                {
                    b.Property<Guid>("IdSituacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdSituacao");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("Situacao");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.TipoDeUsuario", b =>
                {
                    b.Property<Guid>("IdTipoDeUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdTipoDeUsuario");

                    b.ToTable("TipoDeUsuario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<Guid>("IdTipoDeUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Comentario", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Consultas", "Consultas")
                        .WithMany()
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Consultas", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Prontuario", "Prontuarios")
                        .WithMany()
                        .HasForeignKey("IdProntuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Situacao", "Situacao")
                        .WithMany()
                        .HasForeignKey("IdSituacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Prontuarios");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Medico", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Clinica", "Clinica")
                        .WithMany()
                        .HasForeignKey("IdClinica")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.MedicoEspecialidade", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Especialidades", "Especialidades")
                        .WithMany()
                        .HasForeignKey("IdEspecialidades")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Especialidades");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Paciente", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HealthClinic_WebAPI_Lucas.Domains.Usuario", b =>
                {
                    b.HasOne("HealthClinic_WebAPI_Lucas.Domains.TipoDeUsuario", "TipoDeUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoDeUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
